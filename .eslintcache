[{"/home/cyril/projets CC/eshopReact/client/src/index.js":"1","/home/cyril/projets CC/eshopReact/client/src/App.js":"2","/home/cyril/projets CC/eshopReact/client/src/reportWebVitals.js":"3","/home/cyril/projets CC/eshopReact/client/src/context/PizzasContext.js":"4","/home/cyril/projets CC/eshopReact/client/src/components/PizzasList.js":"5","/home/cyril/projets CC/eshopReact/client/src/apis/PizzaFinder.js":"6","/home/cyril/projets CC/eshopReact/client/src/routes/Home.js":"7","/home/cyril/projets CC/eshopReact/client/src/routes/UpdatePage.js":"8","/home/cyril/projets CC/eshopReact/client/src/routes/PizzaDetailPage.js":"9","/home/cyril/projets CC/eshopReact/client/src/components/Autolist.js":"10","/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Header/index.js":"11","/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Search/index.js":"12","/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Pagination/index.js":"13","/home/cyril/projets CC/eshopReact/client/src/components/FullPageLoader/index.js":"14","/home/cyril/projets CC/eshopReact/client/src/components/hooks/useFullPageLoader.js":"15","/home/cyril/projets CC/eshopReact/client/src/routes/Register.js":"16","/home/cyril/projets CC/eshopReact/client/src/routes/Login.js":"17"},{"size":500,"mtime":1611742735651,"results":"18","hashOfConfig":"19"},{"size":982,"mtime":1611951052643,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611742282277,"results":"21","hashOfConfig":"19"},{"size":796,"mtime":1612189893561,"results":"22","hashOfConfig":"19"},{"size":5482,"mtime":1611950626516,"results":"23","hashOfConfig":"19"},{"size":108,"mtime":1611743017902,"results":"24","hashOfConfig":"19"},{"size":821,"mtime":1612190230477,"results":"25","hashOfConfig":"19"},{"size":188,"mtime":1611743255870,"results":"26","hashOfConfig":"19"},{"size":180,"mtime":1611743235854,"results":"27","hashOfConfig":"19"},{"size":0,"mtime":1611822328596,"results":"28","hashOfConfig":"19"},{"size":1016,"mtime":1611943055097,"results":"29","hashOfConfig":"19"},{"size":508,"mtime":1611939661012,"results":"30","hashOfConfig":"19"},{"size":1159,"mtime":1611918203095,"results":"31","hashOfConfig":"19"},{"size":275,"mtime":1611931369935,"results":"32","hashOfConfig":"19"},{"size":364,"mtime":1611930929968,"results":"33","hashOfConfig":"19"},{"size":3014,"mtime":1612189367454,"results":"34","hashOfConfig":"19"},{"size":2817,"mtime":1612190687852,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1nl38hs",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"/home/cyril/projets CC/eshopReact/client/src/index.js",[],["76","77"],"/home/cyril/projets CC/eshopReact/client/src/App.js",[],"/home/cyril/projets CC/eshopReact/client/src/reportWebVitals.js",[],"/home/cyril/projets CC/eshopReact/client/src/context/PizzasContext.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/PizzasList.js",["78"],"import React, {useEffect, useContext, useState, useMemo} from 'react';\nimport {PizzasContext} from '../context/PizzasContext'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport Header from './DataTable/Header'\nimport Search from './DataTable/Search'\nimport Pagination from './DataTable/Pagination'\nimport useFullPageLoader from './hooks/useFullPageLoader'\n\n\nexport default function PizzasList(props) {\n    const {pizzas, setPizzas} = useContext(PizzasContext);\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\n    const [totalItems, setTotalItems] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [search, setSearch] = useState(\"\");\n    const [sorting, setSorting] = useState({field:\"\", order:\"\"});\n    \n    const ITEMS_PER_PAGE = 3;\n\n\n    const headers = [\n        {name: \"Nom\", field: \"name\", sortable:true},\n        {name: \"Base\", field: \"base\", sortable:true},\n        {name: \"Ingrédients\", field: \"ingredients\", sortable:true},\n        {name: \"€\", field: \"price\", sortable:true}\n    ];\n\n\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            showLoader();\n            try {\n                const response = await PizzaFinder.get(\"/pizzas\")\n                 //console.log(response.data.Pizza)\n                 hideLoader();\n                setPizzas(response.data.Pizza);\n            }catch(err) {\n                console.log(err)\n            }\n        }\n\n        fetchData()\n    }, [setPizzas])\n\n\n    const pizzaData = useMemo(() => {\n        let computedPizzas = pizzas;\n        \n\n        if(search){\n            computedPizzas = computedPizzas.filter(\n                pizza => \n                pizza.name.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.base.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.ingredients.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.price.toString().toLowerCase().includes(search.toLowerCase())\n                \n            )\n            \n        }\n        setTotalItems(computedPizzas.length);\n\n\n        //Sorting pizzas\n        if(sorting.field) {\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\n            computedPizzas = computedPizzas.sort(\n                (a,b) => \n                reversed * a[sorting.field].localeCompare(b[sorting.field])\n            )}\n\n\n        //Current Page slice\n        return computedPizzas.slice(\n            (currentPage -1) * ITEMS_PER_PAGE, \n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE)\n    }, [pizzas, currentPage, search, sorting])\n\n    return (\n        <div>\n            {/* <table className=\"table table-hover\">\n                <thead className=\"bg-primary text-white\">\n                    <tr>\n                        <th scope=\"col\">Nom</th>\n                        <th scope=\"col\">Base</th>\n                        <th scope=\"col\">Ingrédients</th>\n                        <th scope=\"col\">Prix</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                        {pizzas && pizzas.map(pizza => {\n                            return (\n                            <tr key={pizza._id}>\n                            \n                                <td>{pizza.name}</td>\n                                <td>{pizza.base}</td>\n                                <td>{pizza.ingredients.join(', ')}</td>\n                                <td>{pizza.price} €</td>\n\n                            </tr>\n                            )\n                        })}\n\n                    \n                    \n                </tbody>\n            </table> */}\n            <div className=\"row w-100\">\n                <div className=\"col mb-3 col-12 text-center\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Pagination \n                                total={totalItems}\n                                itemsPerPage={ITEMS_PER_PAGE}\n                                currentPage={currentPage}\n                                onPageChange={ page => setCurrentPage(page)}\n                            \n                            />\n\n                        </div>\n                        <div className=\"col-md-6 d-flex flex-row-reverse\">\n                            <Search \n                            onSearch={(value) => {\n                                setSearch(value);\n                                setCurrentPage(1)\n                            }}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n            <table className=\"table table-hover\">\n                <Header headers={headers} onSorting={(field, order) => setSorting({field, order}) }/>\n                <tbody>\n                    \n                        {pizzaData && pizzaData.map(pizza => {\n                            return (\n                            <tr key={pizza._id}>\n                            \n                                <td>{pizza.name}</td>\n                                <td>{pizza.base}</td>\n                                <td>{pizza.ingredients}</td>\n                                <td>{pizza.price}</td>\n\n                            </tr>\n                            )\n                        })}\n\n                    \n                    \n                </tbody>\n            </table>\n            {loader}\n        </div>\n    )\n}\n","/home/cyril/projets CC/eshopReact/client/src/apis/PizzaFinder.js",[],"/home/cyril/projets CC/eshopReact/client/src/routes/Home.js",["79"],"import React, {useContext, useEffect} from 'react'\nimport PizzaList from '../components/PizzasList'\n//import Autolist from '../components/Autolist'\nimport {PizzasContext} from '../context/PizzasContext'\nimport { Link } from 'react-router-dom'\n\n\n\n\nexport default function Home() {\n    const {message, setMessage, user} = useContext(PizzasContext);\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setMessage('')\n          }, 2500);\n          console.log('user', user)\n    }, [message])\n\n    return (\n        <div>\n            <h1>Home Page</h1>\n            <Link to='/login'><button className=\"btn btn-primary\">Go to Login</button></Link>\n            {message ? <div className=\"alert alert-success\">{message}</div> : null}\n            <PizzaList />\n           {/*  <Autolist/> */}\n\n        </div>\n    )\n}\n","/home/cyril/projets CC/eshopReact/client/src/routes/UpdatePage.js",[],"/home/cyril/projets CC/eshopReact/client/src/routes/PizzaDetailPage.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/Autolist.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Header/index.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Search/index.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/DataTable/Pagination/index.js",[],"/home/cyril/projets CC/eshopReact/client/src/components/FullPageLoader/index.js",[],["80","81"],"/home/cyril/projets CC/eshopReact/client/src/components/hooks/useFullPageLoader.js",[],"/home/cyril/projets CC/eshopReact/client/src/routes/Register.js",["82"],"import React, {useState, useEffect, useContext} from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport {PizzasContext} from '../context/PizzasContext' \n\nconst Register = () => {\n    let history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [errorDetails, setErrorDetails] = useState(\"\");\n    const [errCode, setErrCode] = useState(\"\");\n    const {message, setMessage} = useContext(PizzasContext);\n    \n\n    \n    const handleSubmitRegister = async(e) => {\n        e.preventDefault()\n        try {\n            const result = await PizzaFinder.post('/users/register', {\n                email, \n                password\n            })\n            setError('');\n            setErrCode('');\n            setMessage('Votre compte a bien été créé. Vous pouvez vous connecter.')\n            history.push('/login')\n            console.log(JSON.stringify(result))\n            \n        } catch (err) {\n            console.log(JSON.stringify(err.message.substr(-3)))\n            setErrCode(err.message.substr(-3))\n            console.log(\"code\", errCode)\n            \n            err ? setError('Erreur d\\'identifiants ou de mot de passe') : setError('');\n        }\n\n    \n    }\n\n    useEffect(() => {\n        errCode === \"500\" ? setErrorDetails('L\\'identifiant n\\'est pas un email') : setErrorDetails('');\n        errCode === \"409\" ? setErrorDetails('L\\'adresse email existe déjà') : setErrorDetails('');\n    }, [errCode])\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <div className=\"mb-2\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"email\" placeholder=\"Email\" type=\"text\" className=\"form-control\"/>\n                    </div>\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"password\">Mot de passe</label>\n                        <input value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        id=\"password\" placeholder=\"Mot de passe\" type=\"password\" className=\"form-control\"/>\n                    </div>\n                    \n                </div>\n                \n                {errorDetails ? <p className=\"alert alert-danger\">{errorDetails}</p> : ''}\n                {error ? <p className=\"alert alert-danger\">{error}</p> : ''}\n                <button \n                type=\"submit\"\n                onClick={handleSubmitRegister}\n                className=\"btn btn-primary\">Submit</button>\n\n            </div>\n            <Link to='/login'><button className=\"btn btn-primary\">Go to Login</button></Link>\n\n        </div>\n    )\n}\n\nexport default Register\n","/home/cyril/projets CC/eshopReact/client/src/routes/Login.js",["83","84","85"],"import React, {useContext, useState} from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport PizzaFinder from '../apis/PizzaFinder'\nimport {PizzasContext} from '../context/PizzasContext'\n\nconst Login = () => {\n    let history = useHistory();\n    const {message, setMessage, setToken, setUser} = useContext(PizzasContext);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [errorDetails, setErrorDetails] = useState(\"\");\n    const [errCode, setErrCode] = useState(\"\");\n    \n    \n\n\n    const handleSubmitLogin = async(e) => {\n        e.preventDefault()\n        \n        try {\n            const result = await PizzaFinder.post('/users/login', {\n                email, \n                password\n            })\n            setError('');\n            setErrCode('');\n            if(result.data.pizzatoken){\n                localStorage.setItem('pizzatoken',result.data.pizzatoken);\n                setToken(result.data.pizzatoken)\n\n                setUser(true)\n\n                setMessage('Vous êtes connecté')\n                history.push('/')\n            }\n            \n        } catch (err) {\n            console.log(JSON.stringify(err.message.substr(-3)))\n            setErrCode(err.message.substr(-3))\n            console.log(\"code\", errCode)\n            \n        }\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            {message ? <div className=\"alert alert-success\">{message}</div> : null}\n            <div className=\"mb-2\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"email\" placeholder=\"Email\" type=\"text\" className=\"form-control\"/>\n                    </div>\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"password\">Mot de passe</label>\n                        <input value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        id=\"password\" placeholder=\"Mot de passe\" type=\"password\" className=\"form-control\"/>\n                    </div>\n                    \n                </div>\n                \n                \n                <button \n                type=\"submit\"\n                onClick={handleSubmitLogin}\n                className=\"btn btn-primary\">Submit</button>\n\n            </div>\n            <Link to='/register'><button className=\"btn btn-primary\">Go to Register</button></Link>\n            <Link to='/'><button className=\"btn btn-primary\">Home</button></Link>\n        </div>\n    )\n}\n\nexport default Login\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":45,"column":8,"nodeType":"92","endLine":45,"endColumn":19,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":18,"column":8,"nodeType":"92","endLine":18,"endColumn":17,"suggestions":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":12,"nodeType":"100","messageId":"101","endLine":13,"endColumn":19},{"ruleId":"98","severity":1,"message":"102","line":11,"column":12,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":12,"column":12,"nodeType":"100","messageId":"101","endLine":12,"endColumn":24},{"ruleId":"98","severity":1,"message":"104","line":12,"column":26,"nodeType":"100","messageId":"101","endLine":12,"endColumn":41},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hideLoader' and 'showLoader'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'setMessage' and 'user'. Either include them or remove the dependency array.",["108"],["105"],["106"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'errorDetails' is assigned a value but never used.","'setErrorDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [hideLoader, setPizzas, showLoader]",{"range":"113","text":"114"},"Update the dependencies array to be: [message, setMessage, user]",{"range":"115","text":"116"},[1459,1470],"[hideLoader, setPizzas, showLoader]",[491,500],"[message, setMessage, user]"]