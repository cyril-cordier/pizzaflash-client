{"version":3,"sources":["context/PizzasContext.js","apis/PizzaFinder.js","components/DataTable/Header/index.js","components/DataTable/Search/index.js","components/DataTable/Pagination/index.js","components/FullPageLoader/index.js","components/hooks/useFullPageLoader.js","components/PizzasList.js","routes/Home.js","routes/Login.js","routes/Register.js","routes/UpdatePage.js","routes/PizzaDetailPage.js","routes/AddPizza.js","routes/ProtectedRoute.js","components/AddIngredient.js","components/IngredientsList.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["PizzasContext","createContext","PizzasContextProvider","props","useState","pizzas","setPizzas","search","setSearch","token","setToken","user","setUser","ingredients","setIngredients","selectedPizza","setSelectedPizza","message","setMessage","Provider","value","addPizzas","pizza","addIngredients","ingredient","children","axios","create","baseURL","Header","headers","onSorting","sortingField","setSortingField","sortingOrder","setSortingOrder","className","map","name","field","sortable","onClick","order","onSortingChange","class","Search","onSearch","type","style","width","placeholder","onChange","e","target","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","Prev","disabled","Next","FullPageLoader","src","window","location","origin","alt","useFullPageLoader","loading","setLoading","PizzasList","useContext","loader","showLoader","hideLoader","totalItems","setTotalItems","setCurrentPage","sorting","setSorting","setHeaders","history","useHistory","is_admin","a","PizzaFinder","get","fetchPizza","fetchIngredients","data","Pizza","Ingredient","console","log","fetchData","handleDelete","id","stopPropagation","delete","Authorization","response","filter","_id","pizzaData","computedPizzas","toLowerCase","includes","base","price","toString","length","reversed","sort","b","localeCompare","slice","page","handleUpdate","Home","email","Login","setEmail","password","setPassword","setError","errCode","setErrCode","handleSubmitLogin","preventDefault","post","result","pizzatoken","localStorage","setItem","jwtDecode","JSON","stringify","substr","action","htmlFor","to","Register","error","errorDetails","setErrorDetails","handleSubmitRegister","UpdatePage","useParams","setName","special","setSpecial","setPrice","setBase","status","setStatus","handleSubmit","method","PizzaDetailPage","pizzaIngredients","setPizzaIngredients","AddPizza","toUpperCase","join","createdPizza","checked","handleSelectIngredient","ProtectedRoute","Component","component","rest","getItem","render","AddIngredient","forceRecord","setForceRecord","messages","test","createdIngredient","setTimeout","IngredientsList","ingredientsDispo","ingredientsData","computedIngredients","removeItem","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9394fc51.chunk.js","sourcesContent":["import React, {useState, createContext} from 'react';\n\nexport const PizzasContext = createContext();\n\nexport const PizzasContextProvider = (props) => {\n    const [pizzas, setPizzas] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [ingredients, setIngredients] = useState([]);\n    \n    const [selectedPizza, setSelectedPizza] = useState(null)\n    const [message, setMessage] = useState(null)\n\n    const addPizzas = (pizza) => {\n        setPizzas([...pizzas, pizza]);\n    }\n    const addIngredients = (ingredient) => {\n        setIngredients([...ingredients, ingredient]);\n    }\n    \n\n    return (\n        <PizzasContext.Provider value={{\n            pizzas, setPizzas, addPizzas, \n            search, setSearch, \n            selectedPizza, setSelectedPizza, \n            message, setMessage, \n            token, setToken, \n            user, setUser, \n            ingredients, setIngredients, addIngredients\n            }}>\n            {props.children}\n        </PizzasContext.Provider>\n    );\n}","import axios from 'axios';\n\nexport default axios.create({\n    baseURL:\"https://pizzaflash.herokuapp.com\",\n})","import React, {useState} from 'react'\n\nconst Header = ({headers, onSorting}) => {\n\n    const [sortingField, setSortingField] = useState(\"\");\n    const [sortingOrder, setSortingOrder] = useState(\"asc\");\n\n    const onSortingChange = field => {\n        const order = field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\n        setSortingField(field);\n        setSortingOrder(order);\n        onSorting(field, order);\n    }\n\n    return (\n        <thead className=\"bg-primary text-white\">\n            <tr>\n                {headers.map( ({name, field, sortable}) => (\n                <th key={name}\n                    onClick= {() => sortable ? onSortingChange(field) : null }\n                >{name} \n                \n                {sortingField && sortingField === field && (\n                    sortingOrder === \"asc\" ? <i className=\"fas fa-arrow-down\"></i> : <i class=\"fas fa-arrow-up\"></i>\n                )}\n                </th>))}\n            </tr>\n        </thead>\n    )\n}\n\nexport default Header\n","import React, {useState} from 'react'\n\n\nconst Search = ({onSearch}) => {\n    const [search, setSearch] = useState('');\n\n    const onInputChange = (value) => {\n        setSearch(value);\n        onSearch(value);\n    }\n\n    return (\n        <input \n        type=\"text\"\n        className=\"form-control\"\n        style={{width:\"240px\"}}\n        placeholder=\"Recherche\"\n        value={search}\n        onChange={(e) => {\n            onInputChange(e.target.value)\n        }}\n        />\n    )\n}\n\nexport default Search\n","import React, {useState, useEffect, useMemo} from 'react'\nimport Pagination from 'react-bootstrap/Pagination'\n\nconst PaginationComponent = ({total=0, itemsPerPage=3, currentPage=1, onPageChange}) => {\n    const [totalPages, setTotalPages] = useState(0)\n\n    useEffect(() => {\n        if( total > 0 && itemsPerPage > 0 ) {\n            setTotalPages(Math.ceil(total / itemsPerPage));\n        }\n    }, [total, itemsPerPage]);\n\n    const paginationItems = useMemo(() => {\n        const pages = [];\n        for(let i=1; i<= totalPages; i++){\n            pages.push(<Pagination.Item key={i} active={i === currentPage} onClick={() => onPageChange(i)}>\n                {i}\n            </Pagination.Item>);\n        }\n        return pages\n    }, [ totalPages, currentPage, onPageChange ])\n    \n    if (totalPages === 0) return null;\n\n\n    return (\n    <Pagination>\n        <Pagination.Prev onClick={ () => onPageChange(currentPage-1)} disabled={currentPage === 1}/>\n            {paginationItems}\n        <Pagination.Next onClick={ () => onPageChange(currentPage+1)} disabled={currentPage === totalPages}/>\n    </Pagination>\n    );\n}\n\nexport default PaginationComponent\n","import React from 'react'\n\n\nconst FullPageLoader = () => {\n    return (\n        <div className=\"fp-container\">\n            <img src={window.location.origin+'/images/loading.gif'} alt=\"chargement\" className=\"fp-loader\"/>\n        </div>\n    )\n}\n\nexport default FullPageLoader;\n","import React, {useState} from 'react'\nimport FullPageLoader from '../FullPageLoader'\n\nconst useFullPageLoader = () => {\n    const [loading, setLoading] = useState(false)\n    return [ \n        loading ? <FullPageLoader /> : null,\n        () => setLoading(true), //Show loader\n        () => setLoading(false) //Hide Loader\n     ]\n}\n\nexport default useFullPageLoader\n","import React, {useEffect, useContext, useState, useMemo} from 'react';\nimport {PizzasContext} from '../context/PizzasContext'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport Header from './DataTable/Header'\nimport Search from './DataTable/Search'\nimport Pagination from './DataTable/Pagination'\nimport useFullPageLoader from './hooks/useFullPageLoader'\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function PizzasList(props) {\n    const {user, pizzas, setPizzas, token, setIngredients} = useContext(PizzasContext);\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\n    const [totalItems, setTotalItems] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [search, setSearch] = useState(\"\");\n    const [sorting, setSorting] = useState({field:\"\", order:\"\"});\n    const [headers, setHeaders] = useState([\n        {name: \"Nom\", field: \"name\", sortable:true},\n        {name: \"Base\", field: \"base\", sortable:true},\n        {name: \"Ingrédients\", field: \"ingredients\", sortable:true},\n        {name: \"€\", field: \"price\", sortable:true}\n        ])\n    let history = useHistory();\n    const ITEMS_PER_PAGE = 10;\n\n\n    \n    useEffect(() => {\n    \n    if(user && user.is_admin === true) {\n        setHeaders([...headers, {name: \"actions\", field: \"actions\"}])\n    }\n    // eslint-disable-next-line\n}, [user])\nuseEffect(() => {\n    \n    const fetchData = async () => {\n        showLoader();\n        try {\n            const fetchPizza = await PizzaFinder.get(\"/pizzas\")\n            const fetchIngredients = await PizzaFinder.get(\"/ingredients\")\n\n            //console.log(response.data.Pizza)\n            setPizzas(fetchPizza.data.Pizza);\n            setIngredients(fetchIngredients.data.Ingredient);\n            hideLoader();\n        }catch(err) {\n            console.log(err)\n        }\n    }\n    \n    fetchData()\n    // eslint-disable-next-line\n    }, [setPizzas])\n\n\n    const handleDelete =  async (e, id) => {\n\n    console.log(id)\n        e.stopPropagation();\n        try {\n            const response = await PizzaFinder.delete(`/pizzas/${id}`, \n            {headers : {\n                Authorization: `Bearer ${token}`\n            }});\n            setPizzas(pizzas.filter(pizza => {\n                return pizza._id !== id\n            }))\n\n            \n            console.log(response);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const handleUpdate = (e, id) => {\n        e.stopPropagation();\n        history.push(`/pizzas/${id}/update`)\n    }\n\n\n    const handlePizzaSelect = (id) => {\n        history.push(`/pizzas/${id}`)\n    }\n\n    const pizzaData = useMemo(() => {\n        let computedPizzas = pizzas;\n        \n\n        if(search){\n            computedPizzas = computedPizzas.filter(\n                pizza => \n                pizza.name.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.base.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.ingredients.toLowerCase().includes(search.toLowerCase()) ||\n                pizza.price.toString().toLowerCase().includes(search.toLowerCase())\n                \n            )\n            \n        }\n        setTotalItems(computedPizzas.length);\n\n\n        //Sorting pizzas\n        if(sorting.field) {\n            const reversed = sorting.order === \"asc\" ? 1 : -1;\n            computedPizzas = computedPizzas.sort(\n                (a,b) => \n                reversed * a[sorting.field].localeCompare(b[sorting.field])\n            )}\n\n\n        //Current Page slice\n        return computedPizzas.slice(\n            (currentPage -1) * ITEMS_PER_PAGE, \n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE)\n    }, [pizzas, currentPage, search, sorting])\n\n    return (\n        <div>\n           \n            <div className=\"row w-100\">\n                <div className=\"col mb-3 col-12 text-center\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Pagination \n                                total={totalItems}\n                                itemsPerPage={ITEMS_PER_PAGE}\n                                currentPage={currentPage}\n                                onPageChange={ page => setCurrentPage(page)}\n                            \n                            />\n\n                        </div>\n                        <div className=\"col-md-6 d-flex flex-row-reverse\">\n                            <Search \n                            onSearch={(value) => {\n                                setSearch(value);\n                                setCurrentPage(1)\n                            }}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n            <table className=\"table table-hover\">\n                <Header headers={headers} onSorting={(field, order) => setSorting({field, order}) }/>\n                <tbody>\n                    \n                        {pizzaData && pizzaData.map(pizza => {\n                            return (\n                            <tr onClick={() => handlePizzaSelect(pizza._id)} key={pizza._id}>\n                            \n                                <td>{pizza.name}</td>\n                                <td>{pizza.base}</td>\n                                <td>{pizza.ingredients}</td>\n                                <td>{pizza.price}</td>\n                                {user ? (user.is_admin ? <td className='row'>\n                                    <button className=\"btn btn-warning\" onClick={(e) => handleUpdate(e, pizza._id)}>Màj</button>\n                                    \n                                    <button className=\"btn btn-danger\" onClick={(e) => handleDelete(e, pizza._id)}>Sup</button>\n                                </td> : null) : null}\n\n                            </tr>\n                            )\n                        })}\n\n                    \n                    \n                </tbody>\n            </table>\n            {loader}\n        </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport PizzaList from '../components/PizzasList'\nimport {PizzasContext} from '../context/PizzasContext'\n\n\n\n\nexport default function Home() {\n    const {message, user} = useContext(PizzasContext);\n    \n    \n\n    return (\n        <div>\n            {message ? <div className=\"alert alert-success\">{message}</div> : null}\n            <h1>Home Page</h1>\n            {user?<h2>Bienvenue {user.email}</h2> :null}\n            \n            <PizzaList />\n           {/*  <Autolist/> */}\n\n        </div>\n    )\n}\n","import React, {useContext, useState} from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport PizzaFinder from '../apis/PizzaFinder'\nimport {PizzasContext} from '../context/PizzasContext'\nimport jwtDecode from 'jwt-decode';\n\nconst Login = () => {\n    let history = useHistory();\n    const {message, setMessage, setToken, setUser} = useContext(PizzasContext);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    // eslint-disable-next-line\n    const [error, setError] = useState(\"\");\n    //const [errorDetails, setErrorDetails] = useState(\"\");\n    const [errCode, setErrCode] = useState(\"\");\n    \n    \n\n\n    const handleSubmitLogin = async(e) => {\n        e.preventDefault()\n        \n        try {\n            const result = await PizzaFinder.post('/users/login', {\n                email, \n                password\n            })\n            setError('');\n            setErrCode('');\n            if(result.data.pizzatoken){\n                localStorage.setItem('pizzatoken',result.data.pizzatoken);\n                setToken(result.data.pizzatoken)\n                //console.log(jwtDecode(result.data.pizzatoken))\n                setUser(jwtDecode(result.data.pizzatoken))\n\n                setMessage('Vous êtes connecté')\n                history.push('/')\n            }\n            \n        } catch (err) {\n            console.log(JSON.stringify(err.message.substr(-3)))\n            setErrCode(err.message.substr(-3))\n            console.log(\"code\", errCode)\n            console.log(err)\n            \n        }\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            {message ? <div className=\"alert alert-success\">{message}</div> : null}\n            <form className=\"mb-2\" action=\"submit\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"email\" placeholder=\"Email\" type=\"text\" className=\"form-control\"/>\n                    </div>\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"password\">Mot de passe</label>\n                        <input value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        id=\"password\" placeholder=\"Mot de passe\" type=\"password\" className=\"form-control\"/>\n                    </div>\n                    \n                </div>\n                \n                \n                <button \n                type=\"submit\"\n                onClick={handleSubmitLogin}\n                className=\"btn btn-primary\">Submit</button>\n\n            </form>\n            <Link to='/register'><button className=\"btn btn-primary\">Go to Register</button></Link>\n            <Link to='/'><button className=\"btn btn-primary\">Home</button></Link>\n        </div>\n    )\n}\n\nexport default Login\n","import React, {useState, useEffect, useContext} from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport {PizzasContext} from '../context/PizzasContext' \n\nconst Register = () => {\n    let history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [errorDetails, setErrorDetails] = useState(\"\");\n    const [errCode, setErrCode] = useState(\"\");\n    const {setMessage} = useContext(PizzasContext);\n    \n\n    \n    const handleSubmitRegister = async(e) => {\n        e.preventDefault()\n        try {\n            const result = await PizzaFinder.post('/users/register', {\n                email, \n                password\n            })\n            setError('');\n            setErrCode('');\n            setMessage('Votre compte a bien été créé. Vous pouvez vous connecter.')\n            history.push('/login')\n            console.log(JSON.stringify(result))\n            \n        } catch (err) {\n            console.log(JSON.stringify(err.message.substr(-3)))\n            setErrCode(err.message.substr(-3))\n            console.log(\"code\", errCode)\n            \n            err ? setError('Erreur d\\'identifiants ou de mot de passe') : setError('');\n        }\n\n    \n    }\n\n    useEffect(() => {\n        errCode === \"500\" ? setErrorDetails('L\\'identifiant n\\'est pas un email') : setErrorDetails('');\n        errCode === \"409\" ? setErrorDetails('L\\'adresse email existe déjà') : setErrorDetails('');\n    }, [errCode])\n\n    return (\n        <div>\n            <h1>Register</h1>\n            <div className=\"mb-2\">\n                <div className=\"form-row\">\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        id=\"email\" placeholder=\"Email\" type=\"text\" className=\"form-control\"/>\n                    </div>\n                    <div className=\"form-group col-8\">\n                        <label htmlFor=\"password\">Mot de passe</label>\n                        <input value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        id=\"password\" placeholder=\"Mot de passe\" type=\"password\" className=\"form-control\"/>\n                    </div>\n                    \n                </div>\n                \n                {errorDetails ? <p className=\"alert alert-danger\">{errorDetails}</p> : ''}\n                {error ? <p className=\"alert alert-danger\">{error}</p> : ''}\n                <button \n                type=\"submit\"\n                onClick={handleSubmitRegister}\n                className=\"btn btn-primary\">Submit</button>\n\n            </div>\n            <Link to='/login'><button className=\"btn btn-primary\">Go to Login</button></Link>\n\n        </div>\n    )\n}\n\nexport default Register\n","import React, {useState, useEffect, useContext} from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport {PizzasContext} from '../context/PizzasContext'\n\n\nexport default function UpdatePage(props) {\n    \n        const {token} = useContext(PizzasContext);\n        const {id} = useParams();\n        let history = useHistory();\n        const [name, setName] = useState(\"\")\n        const [ingredients, setIngredients] = useState(\"\")\n        const [special, setSpecial] = useState(\"\")\n        const [price, setPrice] = useState(\"\")\n        const [base, setBase] = useState(\"\")\n        const [status, setStatus] = useState(\"\")\n        \n       \n\n    useEffect(() => {\n        const fetchData = async() => {\n            const response = await PizzaFinder.get(`/pizzas/${id}`)\n            console.log(response.data.Pizza)\n            setName(response.data.Pizza.name)\n            setIngredients(response.data.Pizza.ingredients)\n            setPrice(response.data.Pizza.price)\n            setBase(response.data.Pizza.base)\n            setStatus(response.data.Pizza.status)\n            setSpecial(response.data.Pizza.special)\n            \n\n        }\n        fetchData()\n        \n    }, [id])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = JSON.stringify(\n                [\n                {\"propName\":\"name\",\"value\":name},\n                {\"propName\":\"price\",\"value\":price},\n                {\"propName\":\"base\",\"value\":base},\n                {\"propName\":\"special\",\"value\":special},\n                {\"propName\":\"status\",\"value\":status},\n                {\"propName\":\"ingredients\",\"value\":ingredients}\n                ])\n        try {\n            await PizzaFinder(`/pizzas/${id}`, {\n            method: 'patch',\n            headers : {\n                'Authorization': `Bearer ${token}`, \n                'Content-Type': 'application/json'\n            },\n            data : data\n        });\n        history.push(\"/\");\n        } catch (err) {\n            console.log(err)\n        }\n        \n                \n    }\n\n        \n    return (\n        <div>\n            <h1 className=\"text-center\">Update Pizza</h1>\n            <p className=\"text-center\">secret page</p>\n            \n            <form action=\"submit\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input value={name} onChange={e => setName(e.target.value)} id=\"name\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"ingredients\">Ingrédients</label>\n                    <input value={ingredients} onChange={e => setIngredients(e.target.value)} id=\"ingredients\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"price\">Prix</label>\n                    <input value={price} onChange={e => setPrice(e.target.value)} id=\"price\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"base\">Base</label>\n                    <input value={base} onChange={e => setBase(e.target.value)} id=\"base\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"status\">Statut</label>\n                    <input value={status} onChange={e => setStatus(e.target.value)} id=\"status\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"special\">Speciale ?</label>\n                    <input value={special} onChange={e => setSpecial(e.target.value)} id=\"special\" type=\"text\" className=\"form-control\"/>\n                </div>\n                <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\n                <button onClick={() => history.push(\"/\")} className=\" btn btn-primary mx-5\">Cancel</button>\n            </form>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport PizzaFinder from '../apis/PizzaFinder'\n\n\nexport default function PizzaDetailPage() {\n\n        const {id} = useParams();\n        \n        //const {restaurants} = useContext(RestaurantsContext);\n        const [name, setName] = useState(\"\")\n        const [pizzaIngredients, setPizzaIngredients] = useState(\"\")\n        \n\n    useEffect(() => {\n        const fetchData = async() => {\n            const response = await PizzaFinder.get(`/pizzas/${id}`)\n            console.log(response.data.Pizza)\n            setName(response.data.Pizza.name)\n            setPizzaIngredients(response.data.Pizza.ingredients)\n            \n\n        }\n        fetchData()\n        \n    }, [id])\n\n        \n    return (\n        <div>\n            \n            \n            <h1 className=\"text-center\">Detail Pizza</h1>\n            \n            <form action=\"\">\n                <div className=\"form-group\">\n                    \n                    <h2>{name}</h2>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"ingredients\">Ingrédients :</label>\n                    <p>{pizzaIngredients}</p>\n                </div>\n                \n            </form>\n        </div>\n    )\n}\n","import React, {useContext, useState} from 'react'\nimport {PizzasContext} from '../context/PizzasContext'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport { useHistory } from 'react-router-dom'\n\nexport default function AddPizza() {\n    const {addPizzas, token, ingredients} = useContext(PizzasContext);\n    const [name, setName] = useState(\"\");\n    const [pizzaIngredients, setPizzaIngredients] = useState([]);\n    const [price, setPrice] = useState(\"\");\n    const [base, setBase] = useState(\"Sauce tomate\");\n    const [special, setSpecial] = useState(false);\n    const [status, setStatus] = useState(\"disponible\");\n    \n    \n    let history = useHistory();\n\n\n    \n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await PizzaFinder.post(\"/pizzas\", {\n                name, \n                ingredients : pizzaIngredients[0] ? pizzaIngredients[0].substr(0,1).toUpperCase() + pizzaIngredients.join(', ').substr(1) : \"\",\n                price,\n                special,\n                base, \n                status\n            }, {headers : {\n                Authorization: `Bearer ${token}`\n            }});\n            //console.log(response.data.createdPizza)\n            addPizzas(response.data.createdPizza);\n            history.push('/')\n        } catch (err) {\n            console.log(err)\n        }\n\n    }\n\n    const handleSelectIngredient = (value) => {\n        const checked = pizzaIngredients.includes(value);\n        //console.log(checked)\n        checked ? setPizzaIngredients(pizzaIngredients.filter((data) => data !== value)) : setPizzaIngredients([...pizzaIngredients, value])\n        \n        //console.log(pizzaIngredients[0] ? pizzaIngredients[0].substr(0,1).toUpperCase() + pizzaIngredients.join(', ').substr(1) : \"\")\n    }\n\n    return (\n        <>\n            <div>\n\n                <h1 className=\"text-center\">Add Pizza</h1>\n                <p className=\"text-center\">secret page</p>\n            </div>\n        \n            \n            <form className=\"mb-4\" action=\"\">\n                <div className=\"row form-row\">\n                    <div className=\"col\">\n                        <input type=\"text\" value={name} onChange={e => setName(e.target.value)} className=\"form-control\" placeholder=\"Nom\"/>\n                    </div>\n                    <div className=\"col\">\n                        <input type=\"text\" value={price} onChange={e => setPrice(e.target.value)} className=\"form-control\" placeholder=\"Prix\"/>\n                    </div>\n                    \n                </div>\n                <div className=\"row form-row\">\n                    <div className=\"col\">\n                      <select className=\" form-control\" value={base} onChange={e => setBase(e.target.value)} >\n                        <option>Sauce tomate</option>\n                        <option>Crème fraîche</option>\n                      </select>\n                    </div>\n                    <div className=\"col\">\n                        <select className=\" form-control\" value={special} onChange={e => setSpecial(e.target.value)} >\n                          <option value=\"false\">Ordinaire</option>\n                          <option value=\"true\">Spéciale</option>\n                      </select>\n                    </div>\n                </div>\n                <div className=\"row form-row\">\n                    <div className=\"col\">\n                        <select className=\" form-control\" value={status} onChange={e => setStatus(e.target.value)} >\n                          <option value=\"true\">Disponible</option>\n                          <option value=\"false\">Non disponible</option>\n                      </select>\n                    </div>\n                </div>\n                <div className=\"row from-row\">\n                <div className=\"col\">\n                        <p className=\"mt-3\">Ingrédients :</p>\n                        <p>{pizzaIngredients[0] ? pizzaIngredients[0].substr(0,1).toUpperCase() + pizzaIngredients.join(', ').substr(1) : \"\"} </p>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n    \n  </div>\n\n{ingredients ? ingredients.map(ingredient => \n  <div className=\"form-check form-check-inline\" key={ingredient._id}>\n    <input className=\"form-check-input\" \n    type=\"checkbox\"  \n    id={ingredient._id} \n    value={ingredient.name} \n    onClick={(e) => handleSelectIngredient(e.target.value)}\n    />\n    <label className=\"form-check-label\" htmlFor={ingredient._id}>{ingredient.name.substr(0,1).toUpperCase() + ingredient.name.substr(1)}</label>\n  </div>\n) : null}\n\n\n\n\n\n  {/* <div className=\"form-group\">\n    <label htmlFor=\"exampleFormControlFile1\">Example file input</label>\n    <input type=\"file\" className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n  </div> */}\n                    <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary col mx-3\">Add</button>\n            </form>  \n            \n\n            \n        </>\n        \n        \n    )\n}\n","import React, {useContext, useEffect} from 'react';\nimport {Redirect, Route} from 'react-router-dom' ;\nimport {PizzasContext} from '../context/PizzasContext'\nimport jwtDecode from 'jwt-decode';\n\nconst ProtectedRoute = ({component: Component, ...rest}) => {\n    const {setUser} = useContext(PizzasContext);\n    \n    useEffect(() => {\n        localStorage.getItem('pizzatoken')? setUser(jwtDecode(localStorage.getItem('pizzatoken'))) : setUser(null)\n    },[setUser])\n\n    return (\n         localStorage.getItem('pizzatoken') ? <Route {...rest} render={\n            props => <Component {...rest} {...props} /> \n        } /> : <Redirect to=\"/login\" />\n    )\n}\n\nexport default ProtectedRoute ;\n","import React, {useState, useContext} from 'react';\nimport PizzaFinder from '../apis/PizzaFinder'\nimport { PizzasContext } from '../context/PizzasContext'\n    \n    const AddIngredient = () => {\n    const {ingredients, addIngredients, token} = useContext(PizzasContext);\n    const [name, setName] = useState(\"\");\n    const [base, setBase] = useState(false);\n    const [message, setMessage] = useState(null);\n    const [status, setStatus] = useState(\"\");\n    const [forceRecord, setForceRecord] = useState(false);\n\n\n    const messages = {\n        success: \"Ingrédient créé avec succès\",\n        error : \"Ingrédient déjà enregistré\", \n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const test = ingredients.filter(ingredient => \n            ingredient.name.toLowerCase().includes(name.toLowerCase()))\n            setStatus(\"error\")\n            \n        if(test.length>0 && forceRecord === false) {\n                setMessage(messages.error)\n            }else{\n                try {\n                    const response = await PizzaFinder.post(\"/ingredients\", {\n                        name, \n                        base\n                    }, \n                    {headers : {\n                        Authorization: `Bearer ${token}`\n                    }});\n                    //setMessage({...message, status : \"success\"})\n                    addIngredients(response.data.createdIngredient);\n                    setName(\"\")\n                    setBase(false)\n                    setForceRecord(false)\n                    setMessage(messages.success)\n                    setStatus(\"success\")\n                    setTimeout(() => {\n                        setMessage('')\n                        setStatus('')\n                      }, 2000);\n                    \n                } catch (err) {\n                    console.log(err)\n                }\n            }\n\n            \n\n    }\n\n    \n\n    return (\n        <div className=\"mb-4\">\n            <form action=\"submit\">\n                <div className=\"row form-row\">\n                    <div className=\"col text-center\">\n                        <label htmlFor=\"nom\">Ingrédient</label>\n                        <input type=\"text\" id=\"nom\" value={name} onChange={e => setName(e.target.value)} className=\"form-control\" placeholder=\"Nom\"/>\n                    </div>\n                    \n                    <div className=\"col text-center\">\n                        <label htmlFor=\"base\">Base</label>\n                        <select \n                        id=\"base\"\n                        value={base}\n                        onChange={e => setBase(e.target.value)}\n                        className=\"form-control mr-sm-2\">\n                            <option disabled>Base</option>\n                            <option value=\"true\">Oui</option>\n                            <option value=\"false\">Non</option>\n                        </select>\n                    </div>\n                    <div className=\"col text-center\" >\n                        <label  htmlFor=\"forceRecord\">Forcer Enregistrement</label>\n                        <input className=\"form-check-input \" \n                        type=\"checkbox\"  \n                        id=\"forceRecord\" \n                        value={forceRecord}\n                        onClick={() => {setForceRecord(!forceRecord)}}\n                        />\n                    </div>\n                    \n                        <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-primary col mx-3\">Add</button>\n                    \n                </div>\n            </form>  \n            {message && status && status === 'success' ? <div className=\"alert alert-success\">{messages.success}</div> : null}\n            {message && status && status === 'error' ? <div className=\"alert alert-danger\">{messages.error}</div> : null}\n                      \n        </div>\n    )\n}\n\nexport default AddIngredient\n","import React, {useContext, useEffect, useState, useMemo} from 'react'\nimport PizzaFinder from '../apis/PizzaFinder'\nimport Header from './DataTable/Header'\nimport Search from './DataTable/Search'\nimport Pagination from './DataTable/Pagination'\nimport { PizzasContext } from '../context/PizzasContext'\nimport useFullPageLoader from './hooks/useFullPageLoader'\nimport AddIngredient from './AddIngredient'\n\n\nconst IngredientsList = () => {\n    const {ingredients, setIngredients, token} = useContext(PizzasContext)\n    const [loader, showLoader, hideLoader] = useFullPageLoader();\n    const [totalItems, setTotalItems] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [search, setSearch] = useState(\"\");\n    const [sorting, setSorting] = useState({field:\"\", order:\"\"});\n\n\n    const ITEMS_PER_PAGE = 10;\n\n    const headers = [\n        {name: \"Nom\", field: \"name\", sortable:true},\n        {name: \"Base\", field: \"base\"},\n        {name: 'actions'}\n    ];\n\n    useEffect(() => {\n        const ingredientsDispo = async () => {\n            showLoader();\n            try {\n                const response = await PizzaFinder('/ingredients')\n                hideLoader();\n                setIngredients(response.data.Ingredient)\n                \n                //console.log(response.data.Ingredient)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n        ingredientsDispo();\n        // eslint-disable-next-line\n    }, [setIngredients])\n\n\n    const ingredientsData = useMemo(() => {\n        let computedIngredients = ingredients;\n        \n\n        if(search){\n            computedIngredients = computedIngredients.filter(\n                ingredient => \n                ingredient.name.toLowerCase().includes(search.toLowerCase())                \n            )\n            \n        }\n        setTotalItems(computedIngredients.length);\n\n    //Sorting ingredients\n    if(sorting.field) {\n        const reversed = sorting.order === \"asc\" ? 1 : -1;\n        computedIngredients = computedIngredients.sort(\n            (a,b) => \n            reversed * a[sorting.field].localeCompare(b[sorting.field])\n        )}\n\n\n    //Current Page slice\n    return computedIngredients.slice(\n        (currentPage -1) * ITEMS_PER_PAGE, \n        (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE)\n}, [ingredients, currentPage, search, sorting])\n\nconst handleDelete =  async (e, id) => {\n   \n    //console.log(id)\n        e.stopPropagation();\n        try {\n            await PizzaFinder.delete(`/ingredients/${id}`, \n            {headers : {\n                Authorization: `Bearer ${token}`\n            }});\n            setIngredients(ingredients.filter(ingredient => {\n                return ingredient._id !== id\n            }))\n\n            //console.log(response);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    return (\n        <div>\n            <h1 className=\"text-center\">Ingredients disponibles</h1>\n            <div className=\"row w-100\">\n                <div className=\"col mb-3 col-12 text-center\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Pagination \n                                total={totalItems}\n                                itemsPerPage={ITEMS_PER_PAGE}\n                                currentPage={currentPage}\n                                onPageChange={ page => setCurrentPage(page)}\n                            \n                            />\n\n                        </div>\n                        <div className=\"col-md-6 d-flex flex-row-reverse\">\n                            <Search \n                            onSearch={(value) => {\n                                setSearch(value);\n                                setCurrentPage(1)\n                            }}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <AddIngredient/> \n            </div>\n            <table className=\"table table-hover\">\n                <Header headers={headers} onSorting={(field, order) => setSorting({field, order}) }/>\n                <tbody>\n                    \n                        {ingredientsData.map(ingredient => {\n                            return (\n                                <tr key={ingredient._id}>\n                            \n                                    <td>{ingredient.name}</td>\n                                    <td>{ingredient.base === true ? \"Oui\" : \"Non\"}</td>\n                                \n                                <td ><button className=\"btn btn-danger\" onClick={(e) => handleDelete(e, ingredient._id)}>Sup</button>\n                                </td>\n                                \n                            </tr>\n                            )\n                        })}\n\n                    \n                    \n                </tbody>\n            </table>\n            {loader}\n        </div>\n    )\n}\n\nexport default IngredientsList\n","import React, {useEffect, useContext} from 'react';\nimport {PizzasContext} from '../context/PizzasContext'\nimport { Link } from 'react-router-dom'\nimport jwtDecode from 'jwt-decode';\n\n\nconst Header = () => {\n    const {message, setMessage, user, setUser, setToken} = useContext(PizzasContext);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setMessage('')\n          }, 5000);\n          //console.log('user', user)\n    }, [message, setMessage])\n\n    useEffect(() => {\n        if(localStorage.getItem('pizzatoken')) {\n            setUser(jwtDecode(localStorage.getItem('pizzatoken')))\n            setToken(localStorage.getItem('pizzatoken'))\n        } else {\n            setUser(null)\n        }\n\n    },[setUser, setToken])\n\n    const handleLogOut = () => {\n        setUser(null)\n        localStorage.removeItem('pizzatoken');\n        \n    }\n\n    return (\n        <div>\n            {user? <Link to=\"/\"><button className=\"btn btn-primary float-right\" onClick={handleLogOut}>Déconnecter</button></Link> : <Link to='/login'><button className=\"btn btn-primary float-right\">Login</button></Link>}\n            <Link to='/'><button className=\"btn btn-primary\">Home</button></Link>\n            {user ? (user.is_admin === true ? <><Link to='/addpizza'><button className=\"btn btn-primary\">Add a Pizza</button></Link>\n            <Link to='/ingredients'><button className=\"btn btn-primary\">Ingredients</button></Link></> : null) : null}\n        </div>\n    )\n}\n\nexport default Header\n","import './App.css';\nimport { PizzasContextProvider } from './context/PizzasContext';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './routes/Home';\nimport Login from './routes/Login';\nimport Register from './routes/Register';\nimport UpdatePage from './routes/UpdatePage';\nimport PizzaDetailPage from './routes/PizzaDetailPage';\nimport AddPizza from './routes/AddPizza';\nimport ProtectedRoute from './routes/ProtectedRoute';\nimport IngredientsList from './components/IngredientsList';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <PizzasContextProvider>\n\n      <div className='container'>\n        <Router>\n          <Header />\n        \n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <ProtectedRoute exact path='/ingredients' component={IngredientsList}/>\n            <ProtectedRoute exact path='/addpizza' component={AddPizza}/>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/register' component={Register}/>\n            <Route exact path='/pizzas/:id' component={PizzaDetailPage}/>\n            <Route exact path='/pizzas/:id/update' component={UpdatePage}/>\n            <Route component={Home}/>\n          </Switch>\n        </Router>\n      </div>\n    </PizzasContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}